import { z } from 'zod';
declare const envSchema: z.ZodObject<{
    NODE_ENV: z.ZodDefault<z.ZodEnum<["development", "production", "test"]>>;
    API_PORT: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    API_BASE_URL: z.ZodDefault<z.ZodString>;
    DATABASE_URL: z.ZodString;
    REDIS_URL: z.ZodDefault<z.ZodString>;
    JWT_SECRET: z.ZodString;
    JWT_REFRESH_SECRET: z.ZodString;
    JWT_EXPIRES_IN: z.ZodDefault<z.ZodString>;
    JWT_REFRESH_EXPIRES_IN: z.ZodDefault<z.ZodString>;
    BCRYPT_ROUNDS: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    GOOGLE_CLIENT_ID: z.ZodString;
    GOOGLE_CLIENT_SECRET: z.ZodString;
    MCC_CUSTOMER_ID: z.ZodString;
    GOOGLE_ADS_DEVELOPER_TOKEN: z.ZodString;
    YOUTUBE_API_KEY: z.ZodOptional<z.ZodString>;
    STRIPE_SECRET_KEY: z.ZodString;
    STRIPE_WEBHOOK_SECRET: z.ZodString;
    SMTP_HOST: z.ZodDefault<z.ZodString>;
    SMTP_PORT: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    SMTP_SECURE: z.ZodDefault<z.ZodEffects<z.ZodString, boolean, string>>;
    SMTP_USER: z.ZodOptional<z.ZodString>;
    SMTP_PASS: z.ZodOptional<z.ZodString>;
    EMAIL_FROM: z.ZodDefault<z.ZodString>;
    UPLOAD_DIR: z.ZodDefault<z.ZodString>;
    MAX_FILE_SIZE: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    ENABLE_REGISTRATION: z.ZodDefault<z.ZodEffects<z.ZodString, boolean, string>>;
    ENABLE_GOOGLE_ADS_SYNC: z.ZodDefault<z.ZodEffects<z.ZodString, boolean, string>>;
    ENABLE_EMAIL_NOTIFICATIONS: z.ZodDefault<z.ZodEffects<z.ZodString, boolean, string>>;
    DEFAULT_CAMPAIGN_PRICE_EUR: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    VAT_RATE: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    CAMPAIGN_DURATION_DAYS: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    MAX_CAMPAIGNS_PER_USER: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
}, "strip", z.ZodTypeAny, {
    NODE_ENV?: "development" | "production" | "test";
    API_PORT?: number;
    API_BASE_URL?: string;
    DATABASE_URL?: string;
    REDIS_URL?: string;
    JWT_SECRET?: string;
    JWT_REFRESH_SECRET?: string;
    JWT_EXPIRES_IN?: string;
    JWT_REFRESH_EXPIRES_IN?: string;
    BCRYPT_ROUNDS?: number;
    GOOGLE_CLIENT_ID?: string;
    GOOGLE_CLIENT_SECRET?: string;
    MCC_CUSTOMER_ID?: string;
    GOOGLE_ADS_DEVELOPER_TOKEN?: string;
    YOUTUBE_API_KEY?: string;
    STRIPE_SECRET_KEY?: string;
    STRIPE_WEBHOOK_SECRET?: string;
    SMTP_HOST?: string;
    SMTP_PORT?: number;
    SMTP_SECURE?: boolean;
    SMTP_USER?: string;
    SMTP_PASS?: string;
    EMAIL_FROM?: string;
    UPLOAD_DIR?: string;
    MAX_FILE_SIZE?: number;
    ENABLE_REGISTRATION?: boolean;
    ENABLE_GOOGLE_ADS_SYNC?: boolean;
    ENABLE_EMAIL_NOTIFICATIONS?: boolean;
    DEFAULT_CAMPAIGN_PRICE_EUR?: number;
    VAT_RATE?: number;
    CAMPAIGN_DURATION_DAYS?: number;
    MAX_CAMPAIGNS_PER_USER?: number;
}, {
    NODE_ENV?: "development" | "production" | "test";
    API_PORT?: string;
    API_BASE_URL?: string;
    DATABASE_URL?: string;
    REDIS_URL?: string;
    JWT_SECRET?: string;
    JWT_REFRESH_SECRET?: string;
    JWT_EXPIRES_IN?: string;
    JWT_REFRESH_EXPIRES_IN?: string;
    BCRYPT_ROUNDS?: string;
    GOOGLE_CLIENT_ID?: string;
    GOOGLE_CLIENT_SECRET?: string;
    MCC_CUSTOMER_ID?: string;
    GOOGLE_ADS_DEVELOPER_TOKEN?: string;
    YOUTUBE_API_KEY?: string;
    STRIPE_SECRET_KEY?: string;
    STRIPE_WEBHOOK_SECRET?: string;
    SMTP_HOST?: string;
    SMTP_PORT?: string;
    SMTP_SECURE?: string;
    SMTP_USER?: string;
    SMTP_PASS?: string;
    EMAIL_FROM?: string;
    UPLOAD_DIR?: string;
    MAX_FILE_SIZE?: string;
    ENABLE_REGISTRATION?: string;
    ENABLE_GOOGLE_ADS_SYNC?: string;
    ENABLE_EMAIL_NOTIFICATIONS?: string;
    DEFAULT_CAMPAIGN_PRICE_EUR?: string;
    VAT_RATE?: string;
    CAMPAIGN_DURATION_DAYS?: string;
    MAX_CAMPAIGNS_PER_USER?: string;
}>;
export type EnvConfig = z.infer<typeof envSchema>;
declare let env: EnvConfig;
export { env };
//# sourceMappingURL=env.d.ts.map